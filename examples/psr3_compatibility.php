<?php

require_once __DIR__ . '/../vendor/autoload.php';

use AdvancedMailer\Mail;
use AdvancedMailer\LoggerInterface;
use Psr\Log\LoggerInterface as PsrLoggerInterface; // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è PSR-3 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 *
 * –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ Advanced Mailer –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
 * —Å –ª—é–±—ã–º PSR-3 —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º –ª–æ–≥–≥–µ—Ä–æ–º
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$config = [
    'smtp_host' => 'smtp.gmail.com',
    'smtp_port' => 587,
    'smtp_username' => 'your-email@gmail.com',
    'smtp_password' => 'your-app-password',
    'smtp_encryption' => 'tls'
];

echo "=== PSR-3 –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è ===\n";

// 1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π PSR-3 —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
$mail = new Mail($config);

// –ù–∞—à–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å PSR-3
$customLogger = new class implements LoggerInterface {
    public function emergency(string $message, array $context = []): void {
        echo "[EMERGENCY] $message\n";
    }
    public function alert(string $message, array $context = []): void {
        echo "[ALERT] $message\n";
    }
    public function critical(string $message, array $context = []): void {
        echo "[CRITICAL] $message\n";
    }
    public function error(string $message, array $context = []): void {
        echo "[ERROR] $message\n";
    }
    public function warning(string $message, array $context = []): void {
        echo "[WARNING] $message\n";
    }
    public function notice(string $message, array $context = []): void {
        echo "[NOTICE] $message\n";
    }
    public function info(string $message, array $context = []): void {
        echo "[INFO] $message\n";
    }
    public function debug(string $message, array $context = []): void {
        echo "[DEBUG] $message\n";
    }
    public function log($level, string $message, array $context = []): void {
        echo "[$level] $message\n";
    }
};

$mail->setLogger($customLogger);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏—Å—å–º–∞
$mail->setFrom('sender@example.com', '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å');
$mail->addAddress('recipient@example.com', '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å');
$mail->setSubject('PSR-3 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å');
$mail->setHtmlBody('<h1>–¢–µ—Å—Ç PSR-3 –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è</h1>');

echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∏—Å—å–º–∞...\n";

try {
    // –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    $mail->send();
} catch (Exception $e) {
    echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: " . $e->getMessage() . "\n";
}

echo "\n=== –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–±–æ—Ç–µ —Å –≤–Ω–µ—à–Ω–∏–º–∏ PSR-3 –ª–æ–≥–≥–µ—Ä–∞–º–∏ ===\n";

// 2. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ Monolog (–µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
if (class_exists('Monolog\Logger')) {
    echo "Monolog –Ω–∞–π–¥–µ–Ω! –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n";

    echo "```php\n";
    echo "use Monolog\Logger;\n";
    echo "use Monolog\Handler\StreamHandler;\n";
    echo "\n";
    echo "\$monolog = new Logger('mail');\n";
    echo "\$monolog->pushHandler(new StreamHandler('logs/mail.log'));\n";
    echo "\n";
    echo "\$mail = new Mail(\$config);\n";
    echo "\$mail->setLogger(\$monolog); // –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å!\n";
    echo "```\n";
} else {
    echo "Monolog –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:\n";
    echo "composer require monolog/monolog\n\n";

    echo "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å Monolog:\n";
    echo "```php\n";
    echo "\$monolog = new Monolog\Logger('mail');\n";
    echo "\$monolog->pushHandler(new Monolog\Handler\StreamHandler('logs/mail.log'));\n";
    echo "\n";
    echo "\$mail = new Mail(\$config);\n";
    echo "\$mail->setLogger(\$monolog); // –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π!\n";
    echo "```\n";
}

echo "\n=== –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ PSR-3 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ ===\n";
echo "‚úì –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n";
echo "‚úì –õ–µ–≥–∫–∞—è –∑–∞–º–µ–Ω–∞ –ª–æ–≥–≥–µ—Ä–æ–≤\n";
echo "‚úì –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ª—é–±—ã–º–∏ PSR-3 —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è–º–∏\n";
echo "‚úì –ë–æ–≥–∞—Ç—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è\n";
echo "‚úì 8 —É—Ä–æ–≤–Ω–µ–π –≤–∞–∂–Ω–æ—Å—Ç–∏\n";
echo "‚úì –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª–æ–≥–∞—Ö\n";

echo "\n=== –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ –ª–æ–≥–≥–µ—Ä–∞–º–∏ ===\n";

// 3. –ü—Ä–∏–º–µ—Ä –∞–¥–∞–ø—Ç–µ—Ä–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
class LegacyLoggerAdapter implements LoggerInterface {
    private $legacyLogger;

    public function __construct($legacyLogger) {
        $this->legacyLogger = $legacyLogger;
    }

    public function emergency(string $message, array $context = []): void {
        $this->legacyLogger->log('EMERGENCY', $message, $context);
    }

    public function alert(string $message, array $context = []): void {
        $this->legacyLogger->log('ALERT', $message, $context);
    }

    public function critical(string $message, array $context = []): void {
        $this->legacyLogger->log('CRITICAL', $message, $context);
    }

    public function error(string $message, array $context = []): void {
        $this->legacyLogger->log('ERROR', $message, $context);
    }

    public function warning(string $message, array $context = []): void {
        $this->legacyLogger->log('WARNING', $message, $context);
    }

    public function notice(string $message, array $context = []): void {
        $this->legacyLogger->log('NOTICE', $message, $context);
    }

    public function info(string $message, array $context = []): void {
        $this->legacyLogger->log('INFO', $message, $context);
    }

    public function debug(string $message, array $context = []): void {
        $this->legacyLogger->log('DEBUG', $message, $context);
    }

    public function log($level, string $message, array $context = []): void {
        $this->legacyLogger->log($level, $message, $context);
    }
}

echo "–ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–∏—Å—Ç–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω!\n";
echo "–¢–µ–ø–µ—Ä—å –ª—é–±—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∫ PSR-3.\n\n";

echo "üéâ Advanced Mailer –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º —Å PSR-3!\n";
